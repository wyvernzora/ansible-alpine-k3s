---
- name: k3s.master.leader | Create K3S config directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 644
  with_items:
   - /etc/rancher/k3s
   - /var/lib/rancher/k3s/server/manifests

- name: k3s.master | Write K3S env file
  ansible.builtin.template:
    src: templates/k3s.env.j2
    dest: /etc/rancher/k3s/k3s.env
    owner: root
    group: root
    mode: 600

- name: k3s.master | Create k3s service
  ansible.builtin.copy:
    src: files/k3s.service
    dest: /etc/init.d/k3s
    owner: root
    group: root
    mode: 755

- name: k3s.master | Start K3S service
  ansible.builtin.service:
    name: k3s
    enabled: yes
    state: started
    runlevel: default

- name: k3s/install/master | Verify that all master nodes have joined the cluster
  command:
    cmd: k3s kubectl get nodes -l "node-role.kubernetes.io/master=true" -o=jsonpath="{.items[*].metadata.name}"
  register: nodes
  until: nodes.rc == 0 and (nodes.stdout.split() | length) == (groups['master'] | length)
  retries: "{{ retry_count | default(20) }}"
  delay: 10
  changed_when: false

- name: k3s.master | Wait for node-token
  ansible.builtin.wait_for:
    path: /var/lib/rancher/k3s/server/node-token

- name: k3s.master | Read node-token from master
  ansible.builtin.slurp:
    src: /var/lib/rancher/k3s/server/node-token
  register: node_token

- name: k3s.master | Store node-token
  ansible.builtin.set_fact:
    token: "{{ node_token.content | b64decode | regex_replace('\n', '') }}"
